apiVersion: apps/v1
kind: Deployment
metadata:
  name: { ? { include "webhook-receiver.fullname" . } }
  labels:
    app.kubernetes.io/name: { ? { include "webhook-receiver.name" . } }
    app.kubernetes.io/instance: { ? { .Release.Name } }
spec:
  replicas: { ? { .Values.replicaCount } }
  selector:
    matchLabels:
      app.kubernetes.io/name: { ? { include "webhook-receiver.name" . } }
      app.kubernetes.io/instance: { ? { .Release.Name } }
  template:
    metadata:
      labels:
        app.kubernetes.io/name: { ? { include "webhook-receiver.name" . } }
        app.kubernetes.io/instance: { ? { .Release.Name } }
    spec:
      securityContext: { ? { toYaml .Values.securityContext | nindent 8 } }
      containers:
      - name: receiver
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: { ? { .Values.image.pullPolicy } }
        ports:
        - containerPort: 8080
        env:
        - name: ENABLE_SLACK
          value: { ? { .Values.notifications.slack.enabled | quote } }
        - name: SLACK_WEBHOOK_URL
          valueFrom:
            secretKeyRef:
              name: webhook-receiver-secrets
              key: slackWebhookUrl
        - name: ENABLE_TELEGRAM
          value: { ? { .Values.notifications.telegram.enabled | quote } }
        - name: TELEGRAM_BOT_TOKEN
          valueFrom:
            secretKeyRef:
              name: webhook-receiver-secrets
              key: telegramBotToken
        - name: TELEGRAM_CHAT_ID
          valueFrom:
            secretKeyRef:
              name: webhook-receiver-secrets
              key: telegramChatId
        - name: ADDR
          value: { ? { .Values.env.addr | quote } }
